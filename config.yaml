apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: emailservices
  name: emailservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emailservices
  template:
    metadata:
      labels:
        app: emailservices
    spec:
      containers:
      - image: gcr.io/google-samples/microservices-demo/emailservice:v0.7.0
        name: service
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: emailservices
  name: emailservices
spec:
  type: ClusterIP
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: emailservices

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: recommendationservice
  name: recommendationservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      containers:
      - image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.7.0
        name: service
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: recommendationservice
  name: recommendationservice
spec:
  type: ClusterIP
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: recommendationservice

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: productcatalogservice
  name: productcatalogservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      containers:
      - image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.7.0
        name: service
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: productcatalogservice
  name: productcatalogservice
spec:
  type: ClusterIP
  ports:
  - port: 3550
    protocol: TCP
    targetPort: 3550
  selector:
    app: productcatalogservice
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: paymentservice
  name: paymentservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/paymentservice:v0.6.0
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: DISABLE_PROFILER
          value: "1"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: paymentservice
  name: paymentservice
spec:
  type: ClusterIP
  ports:
  - port: 50051
    protocol: TCP
    targetPort: 50051
  selector:
    app: paymentservice
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: currencyservice
  name: currencyservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
    spec:
      containers:
      - image: gcr.io/google-samples/microservices-demo/currencyservice:v0.7.0
        name: service
        ports:
        - containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        - name: DISABLE_PROFILER
          value: "1"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: currencyservice
  name: currencyservice
spec:
  type: ClusterIP
  ports:
  - port: 7000
    protocol: TCP
    targetPort: 7000
  selector:
    app: currencyservice
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: shippingservice
  name: shippingservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      containers:
      - image: gcr.io/google-samples/microservices-demo/shippingservice:v0.7.0
        name: service
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: shippingservice
  name: shippingservice
spec:
  type: ClusterIP
  ports:
  - port: 50051
    protocol: TCP
    targetPort: 50051
  selector:
    app: shippingservice
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adservice
  name: adservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - image: gcr.io/google-samples/microservices-demo/adservice:v0.7.0
        name: service
        ports:
        - containerPort: 9555
        env:
        - name: PORT
          value: "9555"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: adservice
  name: adservice
spec:
  type: ClusterIP
  ports:
  - port: 9555
    protocol: TCP
    targetPort: 9555
  selector:
    app: adservice
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cartservice
  name: cartservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      containers:
      - image: gcr.io/google-samples/microservices-demo/cartservice:v0.7.0
        name: service
        ports:
        - containerPort: 7070
        env:
        - name: PORT
          value: "7070"
        - name: REDIS_ADDR
          value: "redis-cart:6379"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cartservice
  name: cartservice
spec:
  type: ClusterIP
  ports:
  - port: 7070
    protocol: TCP
    targetPort: 7070
  selector:
    app: cartservice
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis-cart
  name: redis-cart
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      labels:
        app: redis-cart
    spec:
      containers:
      - image: redis:alpine
        name: redis
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis-cart
  name: redis-cart
spec:
  type: ClusterIP
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis-cart
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: checkoutservice
  name: checkoutservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      containers:
      - image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.7.0
        name: service
        ports:
        - containerPort: 5050
        env:
        - name: PORT
          value: "5050"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: SHIPPING_SERVICE_ADDR
          value: "shippingservice:50051"
        - name: PAYMENT_SERVICE_ADDR
          value: "paymentservice:50051"
        - name: CART_SERVICE_ADDR
          value: "cartservice:7070"
        - name: EMAIL_SERVICE_ADDR
          value: "emailservice:5000"
        - name: CURRENCY_SERVICE_ADDR
          value: "currencyservice:7000"
        

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: checkoutservice
  name: checkoutservice
spec:
  type: ClusterIP
  ports:
  - port: 5050
    protocol: TCP
    targetPort: 5050
  selector:
    app: checkoutservice
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/frontend:v0.7.0
          ports:
          - containerPort: 8080
          env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          - name: RECOMMENDATION_SERVICE_ADDR
            value: "recommendationservice:8080"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: CHECKOUT_SERVICE_ADDR
            value: "checkoutservice:5050"
          - name: AD_SERVICE_ADDR
            value: "adservice:9555"
          
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  type: NodePort
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
    nodePort: 30007
  selector:
    app: frontend